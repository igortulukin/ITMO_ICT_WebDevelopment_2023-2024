{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"\u041e\u0442\u0447\u0435\u0442 \u043f\u043e \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u044b\u043c \u0440\u0430\u0431\u043e\u0442\u0430\u043c","text":""},{"location":"Lab1/Task1/","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 1","text":"<p>\u0417\u0430\u0434\u0430\u0447\u0430: \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0443\u044e \u0438 \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u0443\u044e \u0447\u0430\u0441\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u041a\u043b\u0438\u0435\u043d\u0442 \u043e\u0442\u0441\u044b\u043b\u0430\u0435\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0443 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u00abHello, server\u00bb. \u0421\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u0434\u043e\u043b\u0436\u043d\u043e \u043e\u0442\u0440\u0430\u0437\u0438\u0442\u044c\u0441\u044f \u043d\u0430 \u0441\u0442\u043e\u0440\u043e\u043d\u0435 \u0441\u0435\u0440\u0432\u0435\u0440\u0430. \u0421\u0435\u0440\u0432\u0435\u0440 \u0432 \u043e\u0442\u0432\u0435\u0442 \u043e\u0442\u0441\u044b\u043b\u0430\u0435\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0443 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u00abHello, client\u00bb. \u0421\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u0434\u043e\u043b\u0436\u043d\u043e \u043e\u0442\u043e\u0431\u0440\u0430\u0437\u0438\u0442\u044c\u0441\u044f \u0443 \u043a\u043b\u0438\u0435\u043d\u0442\u0430.</p> <p>\u041b\u0438\u0441\u0442\u0438\u043d\u0433 \u043a\u043e\u0434\u0430:</p> Server.py<pre><code>import socket\n\nsock = socket.socket(family=socket.AF_INET, type=socket.SOCK_DGRAM)\nsock.bind(('', 9090))\n\nwhile True:\n    data = sock.recvfrom(1024)\n    if not data:\n        break\n    print(data[0].decode(\"utf-8\"))\n    sock.sendto(b'Hello, Client!', data[1])\n    break\n</code></pre> Client.py<pre><code>import socket\n\nsock = socket.socket(family=socket.AF_INET, type=socket.SOCK_DGRAM)\nsock.connect(('localhost', 9090))\nsock.send(b'Hello, Server!')\n\ndata = sock.recv(1024)\nsock.close()\n\nprint(data.decode('utf-8'))\n</code></pre> <p>\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0440\u0430\u0431\u043e\u0442\u044b \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b:  </p>"},{"location":"Lab1/Task2/","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 2","text":"<p>\u0417\u0430\u0434\u0430\u0447\u0430: \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0443\u044e \u0438 \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u0443\u044e \u0447\u0430\u0441\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u041a\u043b\u0438\u0435\u043d\u0442 \u0437\u0430\u043f\u0440\u0430\u0448\u0438\u0432\u0430\u0435\u0442 \u0443 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u043c\u0430\u0442\u0435\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438, \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0432\u0432\u043e\u0434\u044f\u0442\u0441\u044f \u0441 \u043a\u043b\u0430\u0432\u0438\u0430\u0442\u0443\u0440\u044b. \u0421\u0435\u0440\u0432\u0435\u0440 \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0443.  a. \u0422\u0435\u043e\u0440\u0435\u043c\u0430 \u041f\u0438\u0444\u0430\u0433\u043e\u0440\u0430</p> <p>\u041b\u0438\u0441\u0442\u0438\u043d\u0433 \u043a\u043e\u0434\u0430:</p> Server.py<pre><code>import math\nimport socket\n\nsock = socket.socket()\nsock.bind(('', 9090))\nsock.listen(10)\nconn, addr = sock.accept()\n\nprint('connected:', addr)\n\nwhile True:\n    data = conn.recv(16384)\n    if not data:\n        break\n    sides = [int(x) for x in data.split()]\n    if len(sides) != 2:\n        conn.send(b'Wrong number of sides')\n    else:\n        side = math.sqrt(sides[0]**2 + sides[1]**2)\n        conn.send(bytes(str(side), 'utf-8'))\n    print(data.decode(\"utf-8\"))\n\n\nconn.close()\n</code></pre> Client.py<pre><code>import socket\n\nsock = socket.socket()\nsock.connect(('localhost', 9090))\nprint('Enter sides')\ndata = input()\nsock.send(bytes(data, 'utf-8'))\n\ndata = sock.recv(1024)\nsock.close()\n\nprint(data.decode('utf-8'))\n</code></pre> <p>\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0440\u0430\u0431\u043e\u0442\u044b \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b:  </p>"},{"location":"Lab1/Task3/","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 3","text":"<p>\u0417\u0430\u0434\u0430\u0447\u0430: \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u0443\u044e \u0447\u0430\u0441\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u041a\u043b\u0438\u0435\u043d\u0442 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0435\u0442\u0441\u044f \u043a \u0441\u0435\u0440\u0432\u0435\u0440\u0443. \u0412 \u043e\u0442\u0432\u0435\u0442 \u043a\u043b\u0438\u0435\u043d\u0442 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 http-\u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0435\u0435 html-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443, \u043a\u043e\u0442\u043e\u0440\u0443\u044e \u0441\u0435\u0440\u0432\u0435\u0440 \u043f\u043e\u0434\u0433\u0440\u0443\u0436\u0430\u0435\u0442 \u0438\u0437 \u0444\u0430\u0439\u043b\u0430 index.html.</p> <p>\u041b\u0438\u0441\u0442\u0438\u043d\u0433 \u043a\u043e\u0434\u0430:</p> page.html<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n  &lt;head&gt;\n    &lt;title&gt;Page&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;h1&gt;Hello world&lt;/h1&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> Server.py<pre><code>import socket\n\nsock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\nsock.bind(('', 9090))\nsock.listen(10)\n\nwhile True:\n    connection, address = sock.accept()\n    data = connection.recv(16384)\n    header = 'HTTP/1.1 200 OK\\n'\n    mimetype = 'text/html'\n    header += 'Content-Type: ' + str(mimetype) + '\\n\\n'\n    file = open('page.html', 'rb')\n    response = file.read()\n    file.close()\n    final_response = header.encode('utf-8')\n    final_response += response\n    connection.send(final_response)\n    connection.close()\n</code></pre> <p>\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0440\u0430\u0431\u043e\u0442\u044b \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b: </p>"},{"location":"Lab1/Task4/","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 4","text":"<p>\u0417\u0430\u0434\u0430\u0447\u0430: \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0434\u0432\u0443\u0445\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0438\u043b\u0438 \u043c\u043d\u043e\u0433\u043e\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0447\u0430\u0442. \u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043c\u043d\u043e\u0433\u043e\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0433\u043e \u0447\u0430\u0441\u0430 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0431\u0430\u043b\u043b\u043e\u0432.</p> <p>\u041b\u0438\u0441\u0442\u0438\u043d\u0433 \u043a\u043e\u0434\u0430:</p> Server.py<pre><code>import socket\nimport threading\n\n\nclass Server:\n    def __init__(self, address):\n        self.users = {}\n        self.conn = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n        self.conn.bind(address)\n        self.conn.listen(10)\n\n    def run(self):\n        while True:\n            sock, addrs = self.conn.accept()\n            sock.sendall('Enter your name:'.encode('UTF-8'))\n            name = sock.recv(4096).decode('utf-8')\n            print(sock)\n            self.users[sock] = name\n            self.dispatch(sock, f\"{name} joined the chat!\", sender=False)\n            threading.Thread(target=self.wait_for_message, args=(sock,)).start()\n\n    def dispatch(self, sender_socket, message, sender=True):\n        name = self.users[sender_socket]\n        for user in self.users:\n            if user != sender_socket:\n                if sender:\n                    user.sendall(f\"{name} : {message}\".encode('UTF-8'))\n                else:\n                    user.sendall(f\"{message}\".encode('UTF-8'))\n\n    def wait_for_message(self, sender_socket):\n        while True:\n            message = sender_socket.recv(4096).decode('utf-8')\n            self.dispatch(sender_socket, message)\n\n\nif __name__ == \"__main__\":\n    server_address = ('', 9090)\n    server = Server(server_address)\n    server.run()\n</code></pre> Client.py<pre><code>import socket\nimport threading\n\n\n\nclass User:\n    def __init__(self, address):\n        self.client = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n        self.address = address\n\n    def start(self):\n        self.client.connect(self.address)\n        server_message = self.client.recv(1024).decode('utf-8')\n        print(server_message)\n        message = input()\n        self.client.send(message.encode('UTF-8'))\n        threading.Thread(target=self.receive_message).start()\n        threading.Thread(target=self.send_message()).start()\n\n    def receive_message(self):\n        while True:\n            message = self.client.recv(4096).decode('UTF-8')\n            print(message)\n\n    def send_message(self):\n        while True:\n            message = input()\n            self.client.send(message.encode('UTF-8'))\n\n\nif __name__ == \"__main__\":\n    server_address = ('localhost', 9090)\n    user = User(server_address)\n    user.start()\n</code></pre> <p>\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0440\u0430\u0431\u043e\u0442\u044b \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b:  </p>"},{"location":"Lab1/Task5/","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 4","text":"<p>\u0417\u0430\u0434\u0430\u0447\u0430: \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043d\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u043f\u0440\u043e\u0441\u0442\u043e\u0439 web-\u0441\u0435\u0440\u0432\u0435\u0440 \u0434\u043b\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 GET \u0438 POST http \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Python \u0438 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 socket.</p> <p>\u041b\u0438\u0441\u0442\u0438\u043d\u0433 \u043a\u043e\u0434\u0430:</p> Server.py<pre><code>import socket\nimport json\n\n\nclass MyHTTPServer:\n    def __init__(self, host, port):\n        self.host = host\n        self.port = port\n        self.grades = {}\n\n    def serve_forever(self):\n        server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n        server_socket.bind((self.host, self.port))\n        server_socket.listen(10)\n        while True:\n            client_socket, addr = server_socket.accept()\n            self.serve_client(client_socket)\n\n    def serve_client(self, client_socket):\n        data = client_socket.recv(1024).decode('UTF-8')\n        try:\n            response = self.parse_request(data)\n            if response:\n                client_socket.send(response)\n        except Exception as e:\n            error_msg = \"HTTP/1.1 400 Bad Request\\n\\n\"\n            client_socket.send(error_msg.encode('utf-8'))\n        finally:\n            client_socket.close()\n\n    def parse_request(self, data):\n        lines = data.split('\\r\\n')\n        headers = lines[0].split()\n        print(f\"Headers : {headers}\")\n        if len(headers) != 3:\n            raise Exception(\"Bad request line\")\n        body = lines[-1]\n        if headers[0] == \"GET\":\n            return self.handle_get()\n        elif headers[0] == \"POST\":\n            return self.handle_post(body)\n        else:\n            raise Exception(\"There is no such method\")\n\n    def handle_get(self):\n        file = open('head.html', 'rb')\n        html = file.read()\n        response = \"HTTP/1.1 200 OK\\n\\n\"\n        response = response.encode('UTF-8')\n        response += html\n        for k, v in self.grades.items():\n            response += f\"&lt;tr&gt;&lt;th&gt;{k}&lt;/th&gt;&lt;th&gt;{v}&lt;/th&gt;&lt;/tr&gt;\".encode('UTF-8')\n        file = open('end.html', 'rb')\n        html = file.read()\n        response += html\n        return response\n\n    def handle_post(self, body):\n        body = json.loads(body)\n        self.grades[body['discipline']] = body['grade']\n        response = \"HTTP/1.1 200 OK\\n\\n\"\n        response = response.encode('UTF-8')\n        return response\n\n\nif __name__ == '__main__':\n    host = \"localhost\"\n    port = 9090\n    serv = MyHTTPServer(host, port)\n    try:\n        serv.serve_forever()\n    except KeyboardInterrupt:\n        pass\n</code></pre> <p>head.html<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"ru\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;title&gt;\u041e\u0446\u0435\u043d\u043a\u0438&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1&gt;\u041e\u0446\u0435\u043d\u043a\u0438&lt;/h1&gt;\n    &lt;table border=\"1\"&gt;\n        &lt;thead&gt;\n            &lt;tr&gt;\n                &lt;th&gt;\u0414\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0430&lt;/th&gt;\n                &lt;th&gt;\u041e\u0446\u0435\u043d\u043a\u0430&lt;/th&gt;\n            &lt;/tr&gt;\n        &lt;/thead&gt;\n        &lt;tbody id=\"grades-table\"&gt;\n</code></pre> head.html<pre><code>        &lt;/tbody&gt;\n    &lt;/table&gt;\n    &lt;h2&gt;\u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0443 \u0438 \u043e\u0446\u0435\u043d\u043a\u0443&lt;/h2&gt;\n    &lt;form id=\"add-form\" onsubmit=\"submitFormFetch()\"&gt;\n        &lt;label&gt;\u0414\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0430:&lt;/label&gt;\n        &lt;input type=\"text\" id=\"discipline\" required&gt;&lt;br&gt;\n        &lt;label&gt;\u041e\u0446\u0435\u043d\u043a\u0430:&lt;/label&gt;\n        &lt;input type=\"number\" id=\"grade\" min=\"1\" max=\"5\" required&gt;&lt;br&gt;\n        &lt;input type=\"submit\" value=\"\u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c\"&gt;\n    &lt;/form&gt;\n\n    &lt;script&gt;\n        function submitFormFetch(event) {\n         let name = document.getElementById('discipline').value\n            let grade = document.getElementById('grade').value\n            console.log(name, grade)\n            let body = {\n                   discipline: name,\n                   grade: grade\n               }\n\n         fetch('http://localhost:9090', {\n               method: \"POST\",\n             body: JSON.stringify(body)\n            })\n            .catch((err) =&gt; {\n               alert(err);\n            });\n         return false;\n      }\n    &lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre></p> <p>\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0440\u0430\u0431\u043e\u0442\u044b \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b:  </p>"},{"location":"Lab2/models/","title":"Models.py","text":"<p>\u0417\u0430\u0434\u0430\u0447\u0430: \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0438 \u0434\u043b\u044f \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u0441\u0430\u0439\u0442\u0430 \u043f\u043e \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0435\u0439 \u043f\u0440\u0435\u0434\u043c\u0435\u0442\u043d\u043e\u0439 \u043e\u0431\u043b\u0430\u0441\u0442\u0438 \"\u0422\u0430\u0431\u043b\u043e \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e\u0431 \u0430\u0432\u0438\u0430\u043f\u0435\u0440\u0435\u043b\u0435\u0442\u0430\u0445\"</p> <p>\u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f: \u0411\u044b\u043b\u0438 \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u044b \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u043c\u043e\u0434\u0435\u043b\u0438: </p> <ul> <li>\u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c</li> <li>\u0420\u0435\u0439\u0441</li> <li>\u0411\u0438\u043b\u0435\u0442</li> <li>\u041c\u0435\u0441\u0442\u043e</li> <li>\u041a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0439</li> </ul> <p>\u041b\u0438\u0441\u0442\u0438\u043d\u0433 \u043a\u043e\u0434\u0430: Models.py<pre><code>from django.db import models\nfrom django.core.validators import MinValueValidator, MaxValueValidator\nfrom django.contrib.auth.models import AbstractUser\nfrom django.conf import settings\n\n\nclass User(AbstractUser):\n    passport = models.CharField(max_length=100)\n\n    def __str__(self):\n        return f\"{self.first_name} {self.last_name} {self.passport}\"\n\n\nclass Seat(models.Model):\n    flight = models.ForeignKey('main_app.Flight', on_delete=models.CASCADE)\n    name = models.CharField(max_length=100)\n\n    def __str__(self):\n        return self.name\n\n\nclass Flight(models.Model):\n    flight_number = models.CharField(max_length=100)\n    time = models.DateTimeField()\n    destination = models.CharField(max_length=100)\n    air_line = models.CharField(max_length=100)\n\n    TYPES = models.TextChoices('type', ['arrive', 'departure'])\n    type = models.CharField(max_length=20, choices=TYPES.choices)\n    gate = models.CharField(max_length=10)\n\n\nclass Ticket(models.Model):\n    passenger = models.ForeignKey(settings.AUTH_USER_MODEL, on_delete=models.CASCADE)\n    seat = models.OneToOneField('main_app.Seat',  on_delete=models.CASCADE)\n    number = models.CharField(max_length=100)\n\n\nclass Comment(models.Model):\n    flight = models.ForeignKey(Flight, on_delete=models.CASCADE)\n    writer = models.ForeignKey(settings.AUTH_USER_MODEL, on_delete=models.CASCADE)\n\n    message = models.TextField()\n    rating = models.IntegerField(validators=[MinValueValidator(1), MaxValueValidator(10)])\n</code></pre></p>"},{"location":"Lab2/preview/","title":"\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435","text":"<p>\u0417\u0430\u0434\u0430\u0447\u0430: \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u0430\u0439\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u0444\u0440\u0435\u0439\u043c\u0432\u043e\u0440\u043a Django 3 \u0438 \u0421\u0423\u0411\u0414 PostgreSQL *, \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0438 \u0441 \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u043e\u043c \u0437\u0430\u0434\u0430\u043d\u0438\u044f \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u044b.</p> <p>\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u0430 #1: \u0425\u0440\u0430\u043d\u0438\u0442\u0441\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u043d\u043e\u043c\u0435\u0440\u0435 \u0440\u0435\u0439\u0441\u0430, \u0430\u0432\u0438\u0430\u043a\u043e\u043c\u043f\u0430\u043d\u0438\u0438, \u043e\u0442\u043b\u0435\u0442\u0435, \u043f\u0440\u0438\u043b\u0435\u0442\u0435, \u0442\u0438\u043f\u0435 (\u043f\u0440\u0438\u043b\u0435\u0442, \u043e\u0442\u043b\u0435\u0442), \u043d\u043e\u043c\u0435\u0440\u0435 \u0433\u0435\u0439\u0442\u0430. \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b:</p> <ul> <li>\u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u043d\u043e\u0432\u044b\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439.</li> <li>\u041f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u0438 \u0440\u0435\u0437\u0435\u0440\u0432\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043c\u0435\u0441\u0442 \u043d\u0430 \u0440\u0435\u0439\u0441\u0430\u0445. \u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0434\u043e\u043b\u0436\u0435\u043d \u0438\u043c\u0435\u0442\u044c \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0438 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f \u0441\u0432\u043e\u0438\u0445 \u0440\u0435\u0437\u0435\u0440\u0432\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0439.</li> <li>\u0410\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440 \u0434\u043e\u043b\u0436\u0435\u043d \u0438\u043c\u0435\u0442\u044c \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043d\u0430 \u0440\u0435\u0439\u0441 \u043f\u0430\u0441\u0441\u0430\u0436\u0438\u0440\u0430 \u0438 \u0432\u043f\u0438\u0441\u0430\u0442\u044c \u0432 \u0441\u0438\u0441\u0442\u0435\u043c\u0443 \u043d\u043e\u043c\u0435\u0440 \u0435\u0433\u043e \u0431\u0438\u043b\u0435\u0442\u0430 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Django-admin. </li> <li>\u0412 \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u043e\u0439 \u0447\u0430\u0441\u0442\u0438 \u0434\u043e\u043b\u0436\u043d\u0430 \u0444\u043e\u0440\u043c\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0442\u0430\u0431\u043b\u0438\u0446\u0430, \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u044e\u0449\u0430\u044f \u0432\u0441\u0435\u0445 \u043f\u0430\u0441\u0441\u0430\u0436\u0438\u0440\u043e\u0432 \u0440\u0435\u0439\u0441\u0430.</li> <li>\u041d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043e\u0442\u0437\u044b\u0432\u043e\u0432 \u043a \u0440\u0435\u0439\u0441\u0430\u043c. \u041f\u0440\u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0438 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0435\u0432, \u0434\u043e\u043b\u0436\u043d\u044b \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0442\u044c\u0441\u044f \u0434\u0430\u0442\u0430 \u0440\u0435\u0439\u0441\u0430, \u0442\u0435\u043a\u0441\u0442 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u044f, \u0440\u0435\u0439\u0442\u0438\u043d\u0433 (1-10), \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0442\u043e\u0440\u0435.</li> </ul>"},{"location":"Lab2/templates/","title":"Templates","text":"<p>\u0417\u0430\u0434\u0430\u0447\u0430: \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c html \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b \u0434\u043b\u044f \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0434\u0430\u043d\u043d\u044b\u0445</p> <p>Base.html \u0432\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u0432 \u0441\u0435\u0431\u044f \"\u0448\u0430\u043f\u043a\u0443\" \u0441\u0430\u0439\u0442\u0430, \u0430 \u0442\u0430\u043a \u0436\u0435 \u0437\u0430\u0433\u0440\u0443\u0436\u0430\u0435\u0442 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 bootstrap \u0434\u043b\u044f \u0443\u0441\u043a\u043e\u0440\u0435\u043d\u0438\u044f \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u044f html \u0441\u0442\u0440\u0430\u043d\u0438\u0446 \u0438 \u043f\u0440\u0438\u0434\u0430\u043d\u0438\u044f \u043b\u0443\u0447\u0448\u0435\u0433\u043e \u0432\u0438\u0434\u0430</p> <p>base.html<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"/&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"/&gt;\n    &lt;title&gt;Airport&lt;/title&gt;\n    &lt;link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\"\n          integrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\" crossorigin=\"anonymous\"&gt;\n\n  &lt;body&gt;\n    &lt;nav class=\"navbar navbar-expand-lg navbar-light bg-light\"&gt;\n        &lt;div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\"&gt;\n            &lt;a class=\"nav-link active\" aria-current=\"page\" href=\"{% url 'flights_list' %}\"&gt;Schedule&lt;/a&gt;\n            {% if user.is_authenticated %}\n            &lt;a class=\"nav-link active\" aria-current=\"page\" href=\"{% url 'tickets_for_user' %}\"&gt; Your Tickets&lt;/a&gt;\n            {% endif %}\n\n          &lt;div class=\"d-flex gap-2\"&gt;\n            {% if user.is_authenticated %}\n              &lt;a href=\"{% url 'user_logout' %}\"&gt;\n                &lt;button class=\"btn btn-outline-danger\" type=\"submit\"&gt;Logout&lt;/button&gt;\n              &lt;/a&gt;\n            {% else %}\n              &lt;a href=\"{% url 'user_login' %}\"&gt;\n                &lt;button class=\"btn btn-outline-primary\" type=\"submit\"&gt;Login&lt;/button&gt;\n              &lt;/a&gt;\n              &lt;a href=\"{% url 'user_register' %}\"&gt;\n                &lt;button class=\"btn btn-outline-primary\" type=\"submit\"&gt;Register&lt;/button&gt;\n              &lt;/a&gt;\n            {% endif %}\n          &lt;/div&gt;\n        &lt;/div&gt;\n    &lt;/nav&gt;\n\n&lt;div class=\"container py-3\"&gt;\n  {% block content %} {% endblock %}\n\n&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> </p> buy_ticket.html<pre><code>{% extends 'base.html' %} {% block content %}\n&lt;h2&gt;Seats&lt;/h2&gt;\n&lt;table class=\"table table-striped table-hover mb-5\"&gt;\n    {% for seat in seats %}\n    &lt;td class=\"text-center\"&gt;\n        {% if seat.is_taken %} &lt;s style=\"color:grey;\"&gt;{{seat.name}}&lt;/s&gt;\n        {% else %} {{seat.name}}\n        {% endif %}\n    &lt;/td&gt;\n    {% endfor %}\n&lt;/table&gt;\n\n&lt;div class=\"row\"&gt;\n    &lt;div class=\"col-md-3\"&gt;\n        &lt;form method=\"post\"&gt;\n            {% csrf_token %}\n            &lt;div class=\"mb-3\"&gt;\n                &lt;label for=\"ticketSeatInput\" class=\"form-label\"&gt;Seat: &lt;/label&gt;\n                &lt;input name='seat' class=\"form-control\" id=\"ticketSeatInput\"&gt;\n            &lt;/div&gt;\n            &lt;button type=\"submit\" class=\"btn btn-primary\"&gt;Submit&lt;/button&gt;\n        &lt;/form&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n{%endblock%}\n</code></pre> <p></p> flight_detail.html<pre><code>{% extends 'base.html' %} {% block content %}\n\n&lt;h1&gt;Flight {{flight.name}}&lt;/h1&gt;\n\n&lt;br&gt;\n\n&lt;h2 class=\"mb-3\"&gt;Information about flight&lt;/h2&gt;\n&lt;div&gt;Type: {{ flight.type }}&lt;/div&gt;\n&lt;div&gt;Flight number: {{ flight.flight_number }}&lt;/div&gt;\n&lt;div&gt;Airline: {{ flight.air_line }}&lt;/div&gt;\n&lt;div&gt;Destination: {{ flight.destination }}&lt;/div&gt;\n&lt;div&gt;Time: {{ flight.time }}&lt;/div&gt;\n&lt;div&gt;Gate: {{ flight.gate }}&lt;/div&gt;\n\n&lt;br&gt;\n&lt;br&gt;\n\n&lt;h2&gt;Passengers already registered&lt;/h2&gt;\n&lt;div class=\"mb-4\"&gt;\n    {% if tickets|length &gt; 0 %}\n    &lt;table class=\"table table-striped table-hover\"&gt;\n        &lt;thead&gt;\n        &lt;tr&gt;\n            &lt;th scope=\"col\"&gt;Username&lt;/th&gt;\n            &lt;th scope=\"col\"&gt;Seat&lt;/th&gt;\n        &lt;/tr&gt;\n        &lt;/thead&gt;\n\n        &lt;tbody&gt;\n        {% for ticket in tickets %}\n        &lt;tr&gt;\n            &lt;td class=\"align-middle\"&gt;{{ticket.passenger.username}}&lt;/td&gt;\n            &lt;td class=\"align-middle\"&gt;{{ticket.seat}}&lt;/td&gt;\n        &lt;/tr&gt;\n        {% endfor %}\n        &lt;/tbody&gt;\n    &lt;/table&gt;\n        {%else%}\n        All seats are free now.\n    {% endif %}\n        &lt;br&gt;\n        &lt;br&gt;\n&lt;/div&gt;\n\n{% if user.is_authenticated %}\n&lt;h3&gt; You can buy a ticket &lt;a href=\"{% url 'buy_ticket' flight.id%}\"&gt; here&lt;/a&gt;&lt;h3&gt;\n    &lt;div&gt;\n        {% if has_ticket%}\n        &lt;td&gt;You already have a&lt;a href=\"{% url 'tickets_for_user'%}\" &gt; ticket&lt;/a&gt; on these flight&lt;/td&gt;\n        {% endif %}\n        {%else%}\n        If you want to buy a ticket, you should be &lt;a href=\"{% url 'register' %}\"&gt; registered&lt;/a&gt;\n        {%endif%}\n        &lt;br&gt;\n        &lt;br&gt;\n    &lt;/div&gt;\n\n\n&lt;h2 class=\"my-3\"&gt;Comments&lt;/h2&gt;\n\n{% if comments|length  &gt; 0 %}\n&lt;ul class=\"list-group\"&gt;\n    {% for comment in comments %}\n    &lt;li class=\"list-group-item\"&gt;\n        &lt;strong&gt;{{ comment.writer.username }}&lt;/strong&gt;\n        &lt;br&gt;\n        Rating: {{ comment.rating }}\n        &lt;br&gt;\n        {{ comment.message }}\n    &lt;/li&gt;\n    {% endfor %}\n&lt;/ul&gt;\n{% else %}\nNo comments were left\n&lt;br&gt;\n&lt;br&gt;\n{% endif%}\n\n{% if user.is_authenticated %}\n\n&lt;h5 class=\"my-3\"&gt;Add comment&lt;/h5&gt;\n&lt;form method=\"post\" class=\"mb-5\"&gt;\n    {% csrf_token %}\n    {{ comment_form.as_p }}\n    &lt;button type=\"submit\" class=\"btn btn-primary\"&gt;Add&lt;/button&gt;\n&lt;/form&gt;\n{% endif%}\n\n\n{% endblock %}\n</code></pre> <p> flight_list.html<pre><code>{% extends 'base.html' %} {% block content %}\n\n&lt;h1 class=\"text-center\"&gt;Schedule&lt;/h1&gt;\n\n&lt;table class=\"table table-striped table-hover mb-5\"&gt;\n  &lt;thead&gt;\n    &lt;tr&gt;\n      &lt;th scope=\"col\"&gt;Type:&lt;/th&gt;\n      &lt;th scope=\"col\"&gt;Time:&lt;/th&gt;\n      &lt;th scope=\"col\"&gt;Flight Num:&lt;/th&gt;\n      &lt;th scope=\"col\"&gt;Direction:&lt;/th&gt;\n      &lt;th scope=\"col\"&gt;Airline:&lt;/th&gt;\n      &lt;th scope=\"col\"&gt;More info:&lt;/th&gt;\n    &lt;/tr&gt;\n  &lt;/thead&gt;\n\n  &lt;tbody&gt;\n    {% for flight in flights %}\n      &lt;tr&gt;\n        &lt;td&gt;{{flight.type}}&lt;/td&gt;\n        &lt;td&gt;{{flight.time}}&lt;/td&gt;\n        &lt;td&gt;{{flight.flight_number}}&lt;/td&gt;\n        &lt;td&gt;{{flight.destination}}&lt;/td&gt;\n        &lt;td&gt;{{flight.air_line}}&lt;/td&gt;\n        &lt;td&gt;&lt;a href=\"{% url 'flight_detail' flight.id %}\"&gt;Details&lt;/a&gt;&lt;/td&gt;\n      &lt;/tr&gt;\n    {% endfor %}\n  &lt;/tbody&gt;\n&lt;/table&gt;\n\n{% endblock %}\n</code></pre> </p> <p>login.html<pre><code>{% extends 'base.html' %} {% block content %}\n\n&lt;h2 class=\"mb-3\"&gt;Sign in&lt;/h2&gt;\n&lt;form method=\"post\" class=\"mb-3\"&gt;\n    {% csrf_token %}\n    {{ form.as_p }}\n    &lt;button type=\"submit\" class=\"btn btn-primary\"&gt;Sign in&lt;/button&gt;\n&lt;/form&gt;\n{% endblock %}\n</code></pre> </p> register.html<pre><code>{% extends 'base.html' %} {% block content %}\n\n&lt;h2 class=\"mb-4\"&gt;Registration&lt;/h2&gt;\n&lt;form method=\"post\" class=\"mb-3\"&gt;\n    {% csrf_token %}\n    {{ user_form.as_p }}\n    &lt;button type=\"submit\" class=\"btn btn-primary\"&gt;Register&lt;/button&gt;\n&lt;/form&gt;\n&lt;p&gt;Already have a profile? &lt;a href=\"{% url 'user_login' %}\" class=\"text-primary\"&gt;Login&lt;/a&gt;&lt;/p&gt;\n\n{% endblock %}\n</code></pre> <p></p> ticket_delete.html<pre><code>{% extends 'base.html' %} {% block content %}\n\n&lt;a href=\"{% url 'flight_detail' ticket.seat.flight.id %}\" class=\"btn btn-secondary mb-4\"&gt;Back to flight&lt;/a&gt;\n\n&lt;h2&gt;Delete ticket&lt;/h2&gt;\n&lt;h5 class=\"my-3\"&gt;Information about ticket&lt;/h5&gt;\n&lt;div&gt;Seat: {{ ticket.seat }}&lt;/div&gt;\n&lt;div&gt;Ticket: {{ ticket.ticket_number }}&lt;/div&gt;\n\n&lt;form method=\"POST\" class=\"mt-3\"&gt;\n    {% csrf_token %}\n    &lt;p&gt;Are you sure you want to delete ticket?&lt;/p&gt;\n\n    &lt;button type=\"submit\" class=\"btn btn-danger\"&gt;Delete&lt;/button&gt;\n&lt;/form&gt;\n\n{% endblock %}\n</code></pre> <p></p> ticket_for_user.html<pre><code>{% extends 'base.html' %} {% block content %}\n\n&lt;h2 class=\"mb-4\"&gt;Your tickets&lt;/h2&gt;\n&lt;table class=\"table table-bordered\"&gt;\n    &lt;thead class=\"thead-light\"&gt;\n    &lt;tr&gt;\n        &lt;th scope=\"col\"&gt;Seat&lt;/th&gt;\n        &lt;th scope=\"col\"&gt;Ticket&lt;/th&gt;\n        &lt;th scope=\"col\"&gt;Flight&lt;/th&gt;\n        &lt;th scope=\"col\"&gt;FlightLink&lt;/th&gt;\n    &lt;/tr&gt;\n    &lt;/thead&gt;\n    &lt;tbody&gt;\n    {% for ticket in tickets %}\n    &lt;tr&gt;\n        &lt;td&gt;{{ ticket.seat}}&lt;/td&gt;\n        &lt;td&gt;{{ ticket.number}}&lt;/td&gt;\n        &lt;td&gt;\n            &lt;div&gt;Flight number: {{ ticket.seat.flight.flight_number }}&lt;/div&gt;\n            &lt;div&gt;Airline: {{ ticket.seat.flight.air_line }}&lt;/div&gt;\n            &lt;div&gt;Destination: {{ ticket.seat.flight.destination }}&lt;/div&gt;\n            &lt;div&gt;Time: {{ ticket.seat.flight.time }}&lt;/div&gt;\n            &lt;div&gt;Gate: {{ ticket.flight.gate }}&lt;/div&gt;\n        &lt;/td&gt;\n        &lt;td&gt;&lt;a href=\"{% url 'flight_detail' ticket.seat.flight.id %}\" class=\"btn btn-primary\"&gt;More&lt;/a&gt;&lt;/td&gt;\n        &lt;td&gt;&lt;a href=\"{% url 'ticket_update' ticket.id %}\" class=\"btn btn-primary\"&gt;Change&lt;/a&gt;&lt;/td&gt;\n    &lt;/tr&gt;\n    {% endfor %}\n    &lt;/tbody&gt;\n&lt;/table&gt;\n\n{% endblock %}\n</code></pre> <p></p> ticket_update.html<pre><code>{% extends 'base.html' %} {% block content %}\n\n&lt;a href=\"{% url 'flight_detail' ticket.seat.flight.id %}\" class=\"btn btn-secondary mb-4\"&gt;Back to flight&lt;/a&gt;\n\n&lt;h2&gt;Change seat&lt;/h2&gt;\n&lt;h5 class=\"my-3\"&gt;Information about ticket&lt;/h5&gt;\n&lt;div&gt;Old seat: {{ ticket.seat }}&lt;/div&gt;\n&lt;div&gt;Ticket: {{ ticket.ticket_number }}&lt;/div&gt;\n\n&lt;form method=\"POST\" class=\"mt-3\"&gt;\n    {% csrf_token %}\n    {{ form.as_p }}\n\n    &lt;button type=\"submit\" class=\"btn btn-primary\"&gt;Save changes&lt;/button&gt; &lt;a href=\"{% url 'ticket_delete' ticket.id %}\" class=\"btn btn-primary\"&gt; or Delete&lt;/a&gt;\n&lt;/form&gt;\n\n\n\n{% endblock %}\n</code></pre> <p></p>"},{"location":"Lab2/urls/","title":"urls.py","text":"<p>\u0417\u0430\u0434\u0430\u0447\u0430: \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u0441\u044b\u043b\u043a\u0438 \u0434\u043b\u044f \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0441 \u0441\u0430\u0439\u0442\u043e\u043c</p> <p>\u041b\u0438\u0441\u0442\u0438\u043d\u0433 \u043a\u043e\u0434\u0430: urls.py<pre><code>from django.urls import path\nfrom . import views\nfrom django.contrib.auth import views as auth_views\n\nurlpatterns = [\n    path(\"register/\", views.register, name=\"user_register\"),\n    path(\"login/\", views.user_login, name=\"user_login\"),\n    path(\"logout/\", views.user_logout, name=\"user_logout\"),\n\n\n    path(\"flights/\", views.flights_list, name=\"flights_list\"),\n    path(\"flights/&lt;int:flight_id&gt;/\", views.flight_detail, name=\"flight_detail\"),\n    path(\"ticket/&lt;int:flight_id&gt;/\", views.buy_ticket, name=\"buy_ticket\"),\n\n    path(\"tickets/\", views.tickets_for_user, name=\"tickets_for_user\"),\n    path(\"tickets/&lt;int:ticket_id&gt;/\", views.ticket_update, name=\"ticket_update\"),\n    path(\"tickets/&lt;int:ticket_id&gt;/delete\", views.ticket_delete, name=\"ticket_delete\"),\n]\n</code></pre></p>"},{"location":"Lab2/views/","title":"Views.py","text":"<p>\u0417\u0430\u0434\u0430\u0447\u0430: \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u044e\u0449\u0438\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u044b \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u044e\u0449\u0438\u0435 \u043e\u0431\u0440\u0430\u0442\u043d\u043e html \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0441 \u0434\u0430\u043d\u043d\u044b\u043c\u0438</p> <p>\u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f: </p>"},{"location":"Lab2/views/#-flights_list","title":"- flights_list","text":"<p>\u041f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u0442\u043e\u043b\u044c\u043a\u043e GET \u0437\u0430\u043f\u0440\u043e\u0441 \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0432\u0441\u0435 \u0440\u0435\u0439\u0441\u044b</p>"},{"location":"Lab2/views/#-flights_detail","title":"- flights_detail","text":"<p>\u0414\u043e\u0441\u0442\u0443\u043f\u043d\u0430 \u0442\u043e\u043b\u044c\u043a\u043e \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u043c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\u043c \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 <code>@login_required</code></p> <p>GET \u0437\u0430\u043f\u0440\u043e\u0441 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0440\u0435\u0439\u0441\u0435 \u0441 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u043c id, \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u043f\u0430\u0441\u0441\u0430\u0436\u0438\u0440\u0430\u0445 \u0438 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u044f\u0445</p> <p>POST \u0437\u0430\u043f\u0440\u043e\u0441 \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u0444\u043e\u0440\u043c\u0443 \u0441 \u043e\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u043d\u044b\u043c \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0435\u043c, \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u0435\u0435 \u0432\u0430\u043b\u0438\u0434\u043d\u043e\u0441\u0442\u044c \u0438 \u0437\u0430\u043f\u0438\u0441\u044b\u0432\u0430\u0442\u044c \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0439 \u0432 \u0411\u0414</p>"},{"location":"Lab2/views/#-buy_ticket","title":"- buy_ticket","text":"<p>\u0414\u043e\u0441\u0442\u0443\u043f\u043d\u0430 \u0442\u043e\u043b\u044c\u043a\u043e \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u043c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\u043c</p> <p>GET \u0437\u0430\u043f\u0440\u043e\u0441 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0441\u0432\u043e\u0431\u043e\u0434\u043d\u044b\u0445 \u043c\u0435\u0441\u0442\u0430\u0445 \u043d\u0430 \u0440\u0435\u0439\u0441</p> <p>POST \u0437\u0430\u043f\u0440\u043e\u0441 \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u0444\u043e\u0440\u043c\u0443 \u0441 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u043c \u043c\u0435\u0441\u0442\u043e\u043c \u0438 \u0435\u0441\u043b\u0438 \u043c\u0435\u0441\u0442\u043e \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442 \u0438 \u0441\u0432\u043e\u0431\u043e\u0434\u043d\u043e, \u0442\u043e \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u0443\u0435\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u043d\u0430 \u043c\u0435\u0441\u0442\u043e</p>"},{"location":"Lab2/views/#-tickets_for_user","title":"- tickets_for_user","text":"<p>\u041f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u0442\u043e\u043b\u044c\u043a\u043e GET \u0437\u0430\u043f\u0440\u043e\u0441 \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u043f\u0438\u0441\u043e\u043a \u0431\u0438\u043b\u0435\u0442\u043e\u0432 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f</p>"},{"location":"Lab2/views/#-ticket_update","title":"- ticket_update","text":"<p>\u0414\u043e\u0441\u0442\u0443\u043f\u043d\u0430 \u0442\u043e\u043b\u044c\u043a\u043e \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u043c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\u043c</p> <p>GET \u0437\u0430\u043f\u0440\u043e\u0441 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0431\u0438\u043b\u0435\u0442\u0435 \u0438 \u0441\u043f\u0438\u0441\u043e\u043a \u0441\u0432\u043e\u0431\u043e\u0434\u043d\u044b\u0445 \u043c\u0435\u0441\u0442 \u043d\u0430 \u044d\u0442\u043e\u0442 \u0436\u0435 \u0440\u0435\u0439\u0441</p> <p>POST \u0437\u0430\u043f\u0440\u043e\u0441 \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u0444\u043e\u0440\u043c\u0443 \u0441 \u043c\u0435\u0441\u0442\u043e\u043c \u0438 \u043c\u0435\u043d\u044f\u0435\u0442 \u043c\u0435\u0441\u0442\u043e \u0443 \u0431\u0438\u043b\u0435\u0442\u0430</p>"},{"location":"Lab2/views/#-ticket_delete","title":"- ticket_delete","text":"<p>\u0414\u043e\u0441\u0442\u0443\u043f\u043d\u0430 \u0442\u043e\u043b\u044c\u043a\u043e \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u043c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\u043c</p> <p>GET \u0437\u0430\u043f\u0440\u043e\u0441 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0431\u0438\u043b\u0435\u0442\u0435</p> <p>POST \u0437\u0430\u043f\u0440\u043e\u0441 \u0443\u0434\u0430\u043b\u044f\u0435\u0442 \u0431\u0438\u043b\u0435\u0442</p>"},{"location":"Lab2/views/#-user_register","title":"- user_register","text":"<p>GET \u0437\u0430\u043f\u0440\u043e\u0441 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0444\u043e\u0440\u043c\u0443 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f</p> <p>POST \u0437\u0430\u043f\u0440\u043e\u0441 \u043f\u043e\u0441\u043b\u0435 \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0438 \u0444\u043e\u0440\u043c\u044b \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u0443\u0435\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0438 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u044b\u0432\u0430\u0435\u0442 \u0435\u0433\u043e</p>"},{"location":"Lab2/views/#-user_login","title":"- user_login","text":"<p>GET \u0437\u0430\u043f\u0440\u043e\u0441 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0444\u043e\u0440\u043c\u0443 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f</p> <p>POST \u0437\u0430\u043f\u0440\u043e\u0441 \u043f\u043e\u0441\u043b\u0435 \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0438 \u0444\u043e\u0440\u043c\u044b \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u044b\u0432\u0435\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f</p>"},{"location":"Lab2/views/#-user_logout","title":"- user_logout","text":"<p>GET \u0443\u0434\u0430\u043b\u044f\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u043e \u0441\u0435\u0441\u0441\u0438\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0438 \u0432\u044b\u0432\u043e\u0434\u0438\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0438\u0437 \u0430\u043a\u043a\u0430\u0443\u043d\u0442\u0430</p> <p>\u041b\u0438\u0441\u0442\u0438\u043d\u0433 \u043a\u043e\u0434\u0430: views.py<pre><code>from django.http import Http404\nfrom django.contrib.auth import login, authenticate, logout\nfrom .forms import TicketForm, RegistrationForm, LoginForm, CommentForm\nfrom .models import Flight, Ticket, Seat, Comment\nfrom django.contrib.auth.decorators import login_required\nfrom django.shortcuts import render, redirect, get_object_or_404\nfrom django.utils.crypto import get_random_string\nfrom django.db.models import Q\n\n\ndef flights_list(request):\n    if request.method != \"GET\":\n        return Http404(f\"Method {request.method} not supported\")\n\n    flights = Flight.objects.all()\n    return render(\n        request,\n        \"flight_list.html\",\n        {\"flights\": flights},\n    )\n\n\n@login_required\ndef flight_detail(request, flight_id):\n    flight = get_object_or_404(Flight, pk=flight_id)\n\n    if request.method == \"POST\":\n        if \"rating\" in request.POST:\n            comment_form = CommentForm(request.POST)\n            if comment_form.is_valid():\n                comment = comment_form.save(commit=False)\n                comment.flight = flight\n                comment.writer = request.user\n                comment.save()\n\n        return redirect(\"flight_detail\", flight_id)\n\n    else:\n\n        seats_set = Seat.objects.filter(flight__id=flight_id).order_by(\"name\")\n        seats = [\n            {\n                \"name\": f\"{seat}\",\n                \"is_taken\": Ticket.objects.filter(seat__id=seat.id).exists(),\n            } for seat in seats_set\n        ]\n\n        ticket_form = TicketForm(flight)\n        has_ticket = Ticket.objects.filter(\n            passenger__id=request.user.id, seat__flight__id=flight_id\n        ).exists()\n\n        comments = Comment.objects.filter(flight__id=flight_id)\n        comment_form = CommentForm()\n\n        return render(\n            request,\n            \"flight_detail.html\",\n            {\n                \"flight\": flight,\n                \"comments\": comments,\n                \"tickets\": Ticket.objects.filter(seat__flight__id=flight_id),\n                \"seats\": seats,\n                \"form\": ticket_form,\n                \"has_ticket\": has_ticket,\n                \"user\": request.user,\n                \"comment_form\": comment_form\n            },\n        )\n\n\ndef buy_ticket(request, flight_id):\n    flight = get_object_or_404(Flight, pk=flight_id)\n\n    if request.method == \"POST\":\n        if 'seat' in request.POST.keys():\n            seat = Seat.objects.filter(name=request.POST['seat'], flight__id=flight_id).first()\n            form = TicketForm({\"seat\": seat})\n\n            if not form.is_valid():\n                return redirect(\"flight_detail\", flight_id)\n\n            ticket = form.save(commit=False)\n            ticket.number = get_random_string(32)\n            ticket.passenger = request.user\n            ticket.seat.flight = flight\n            ticket.save()\n\n            return redirect(\"tickets_for_user\")\n\n    else:\n        seats_set = Seat.objects.filter(flight__id=flight_id).order_by(\"name\")\n        seats = [\n            {\n                \"name\": f\"{seat}\",\n                \"is_taken\": Ticket.objects.filter(seat__id=seat.id).exists(),\n            } for seat in seats_set\n        ]\n\n        return render(\n            request,\n            \"buy_ticket.html\",\n            {\n                \"flight\": flight,\n                \"tickets\": Ticket.objects.filter(seat__flight__id=flight_id),\n                \"seats\": seats,\n                \"user\": request.user,\n            },\n        )\n\n\n@login_required(login_url='/login/')\ndef tickets_for_user(request):\n    tickets = Ticket.objects.filter(passenger=request.user)\n    return render(request, \"ticket_for_user.html\", {\"tickets\": tickets})\n\n\ndef ticket_update(request, ticket_id):\n    ticket = get_object_or_404(Ticket, id=ticket_id)\n\n    if request.method == \"POST\":\n        form = TicketForm(request.POST, instance=ticket)\n        if not form.is_valid():\n            return redirect(\"ticket_update\", ticket_id)\n\n        form.save()\n        return redirect(\"flight_detail\", ticket.seat.flight.id)\n    else:\n        form = TicketForm(instance=ticket)\n        return render(\n            request,\n            \"ticket_update.html\",\n            {\"form\": form, \"ticket\": ticket},\n        )\n\n\n@login_required(login_url='/login/')\ndef ticket_delete(request, ticket_id):\n    ticket = get_object_or_404(Ticket, id=ticket_id, passenger=request.user)\n    if request.method == \"POST\":\n        ticket.delete()\n        return redirect(\"flight_detail\", ticket.seat.flight.id)\n    else:\n        return render(\n            request,\n            \"ticket_delete.html\",\n            {\"ticket\": ticket},\n        )\n\n\ndef register(request):\n    if request.method == \"POST\":\n        user_form = RegistrationForm(request.POST)\n\n        if user_form.is_valid():\n            user = user_form.save()\n            user.set_password(user.password)\n            user.save()\n            return redirect(\"user_login\")\n    else:\n        user_form = RegistrationForm()\n\n    return render(request, \"register.html\", {\"user_form\": user_form})\n\n\ndef user_login(request):\n    if request.method == \"POST\":\n        form = LoginForm(request.POST)\n\n        username = form.data.get(\"username\")\n        password = form.data.get(\"password\")\n        user = authenticate(username=username, password=password)\n\n        if user is None:\n            return redirect(\"user_login\")\n\n        login(request, user)\n        return redirect(\"flights_list\")\n    else:\n        form = LoginForm()\n\n    return render(request, \"login.html\", {\"form\": form})\n\n\ndef user_logout(request):\n    logout(request)\n    return redirect(\"user_login\")\n</code></pre></p>"},{"location":"Lab3/models/","title":"Models.py","text":"<p>\u0417\u0430\u0434\u0430\u0447\u0430: \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0438 \u043f\u043e \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0435\u0439 \u043f\u0440\u0435\u0434\u043c\u0435\u0442\u043d\u043e\u0439 \u043e\u0431\u043b\u0430\u0441\u0442\u0438 \"\u0410\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440 \u0433\u043e\u0441\u0442\u0438\u043d\u0438\u0446\u044b.\"</p> <p>\u041b\u0438\u0441\u0442\u0438\u043d\u0433 \u043a\u043e\u0434\u0430: Models.py<pre><code>from django.db import models\n\n\nclass Floor(models.Model):\n    name = models.CharField(max_length=500)\n\n    def __str__(self):\n        return self.name\n\n\nclass Room(models.Model):\n    num = models.CharField(max_length=10)\n    type = models.CharField(max_length=10, choices=((\"1\", \"1\"), (\"2\", \"2\"), (\"3\", \"3\")))\n    cost = models.FloatField()\n    telephone = models.CharField(max_length=15)\n\n\nclass City(models.Model):\n    name = models.CharField(max_length=100)\n    def __str__(self):\n        return self.name\n\n\nclass Visiter(models.Model):\n    name = models.CharField(max_length=500)\n    passport = models.CharField(max_length=30)\n    fr = models.ForeignKey(\"system.City\", related_name=\"visiters_from\", on_delete=models.CASCADE)\n\n    def __str__(self):\n        return self.name\n\n\nclass Living(models.Model):\n    visiter = models.ForeignKey(\"system.Visiter\", related_name=\"living_where\", on_delete=models.CASCADE)\n    room = models.ForeignKey(\"system.Room\", related_name=\"living_who\", on_delete=models.CASCADE)\n\n    date_start = models.DateField()\n    date_end = models.DateField()\n\n\nclass Worker(models.Model):\n    name = models.CharField(max_length=500)\n\n\nclass Cleaning(models.Model):\n    clearer = models.ForeignKey(\"system.Worker\", related_name=\"clearing_where\", on_delete=models.CASCADE)\n    floor = models.ForeignKey(\"system.Floor\", related_name=\"clearing_who\", on_delete=models.CASCADE)\n\n    day_of_week = models.CharField(max_length=10, choices=((\"mn\", \"mn\"),    (\"tu\", \"tu\"),\n                                                           (\"we\", \"we\"),    (\"th\", \"th\"),\n                                                           (\"fr\", \"fr\"),    (\"sa\", \"sa\"),\n                                                           (\"su\", \"su\")))\n</code></pre></p>"},{"location":"Lab3/preview/","title":"\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435","text":"<p>\u0417\u0430\u0434\u0430\u0447\u0430: \u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u043e\u0439 \u0447\u0430\u0441\u0442\u0438 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 django \u0438 djangorestframework \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0438 \u0441 \u0437\u0430\u0434\u0430\u043d\u0438\u0435\u043c \u0438\u0437 \u0442\u0435\u043a\u0441\u0442\u0430 \u0440\u0430\u0431\u043e\u0442\u044b.</p> <p>\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u0430 #1: \u0421\u043e\u0437\u0434\u0430\u0442\u044c \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u043d\u0443\u044e \u0441\u0438\u0441\u0442\u0435\u043c\u0443, \u043f\u0440\u0435\u0434\u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u043d\u0443\u044e \u0434\u043b\u044f \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u0430 \u0433\u043e\u0441\u0442\u0438\u043d\u0438\u0446\u044b. \u0420\u0430\u0431\u043e\u0442\u0430 \u0441 \u0441\u0438\u0441\u0442\u0435\u043c\u043e\u0439 \u043f\u0440\u0435\u0434\u043f\u043e\u043b\u0430\u0433\u0430\u0435\u0442 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438: - \u043e \u043a\u043b\u0438\u0435\u043d\u0442\u0430\u0445, \u043f\u0440\u043e\u0436\u0438\u0432\u0430\u0432\u0448\u0438\u0445 \u0432 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u043c \u043d\u043e\u043c\u0435\u0440\u0435, \u0432 \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0439 \u043f\u0435\u0440\u0438\u043e\u0434 \u0432\u0440\u0435\u043c\u0435\u043d\u0438; - \u043e \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0435 \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432, \u043f\u0440\u0438\u0431\u044b\u0432\u0448\u0438\u0445 \u0438\u0437 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0433\u043e\u0440\u043e\u0434\u0430, - \u043e \u0442\u043e\u043c, \u043a\u0442\u043e \u0438\u0437 \u0441\u043b\u0443\u0436\u0430\u0449\u0438\u0445 \u0443\u0431\u0438\u0440\u0430\u043b \u043d\u043e\u043c\u0435\u0440 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0433\u043e \u043a\u043b\u0438\u0435\u043d\u0442\u0430 \u0432 \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0439 \u0434\u0435\u043d\u044c \u043d\u0435\u0434\u0435\u043b\u0438, - \u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0432 \u0433\u043e\u0441\u0442\u0438\u043d\u0438\u0446\u0435 \u0441\u0432\u043e\u0431\u043e\u0434\u043d\u044b\u0445 \u043d\u043e\u043c\u0435\u0440\u043e\u0432; - \u0441\u043f\u0438\u0441\u043e\u043a \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432 \u0441 \u0443\u043a\u0430\u0437\u0430\u043d\u0438\u0435\u043c \u043c\u0435\u0441\u0442\u0430 \u0436\u0438\u0442\u0435\u043b\u044c\u0441\u0442\u0432\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043f\u0440\u043e\u0436\u0438\u0432\u0430\u043b\u0438 \u0432 \u0442\u0435 \u0436\u0435 \u0434\u043d\u0438, \u0447\u0442\u043e \u0438 \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0439 \u043a\u043b\u0438\u0435\u043d\u0442, \u0432 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0439 \u043f\u0435\u0440\u0438\u043e\u0434 \u0432\u0440\u0435\u043c\u0435\u043d\u0438. -  \u0410\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440 \u0434\u043e\u043b\u0436\u0435\u043d \u0438\u043c\u0435\u0442\u044c \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438: - \u043f\u0440\u0438\u043d\u044f\u0442\u044c \u043d\u0430 \u0440\u0430\u0431\u043e\u0442\u0443 \u0438\u043b\u0438 \u0443\u0432\u043e\u043b\u0438\u0442\u044c \u0441\u043b\u0443\u0436\u0430\u0449\u0435\u0433\u043e \u0433\u043e\u0441\u0442\u0438\u043d\u0438\u0446\u044b; - \u0438\u0437\u043c\u0435\u043d\u0438\u0442\u044c \u0440\u0430\u0441\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u0441\u043b\u0443\u0436\u0430\u0449\u0435\u0433\u043e; - \u043f\u043e\u0441\u0435\u043b\u0438\u0442\u044c \u0438\u043b\u0438 \u0432\u044b\u0441\u0435\u043b\u0438\u0442\u044c \u043a\u043b\u0438\u0435\u043d\u0442\u0430.</p>"},{"location":"Lab3/serializers/","title":"Serializers.py","text":"<p>\u041b\u0438\u0441\u0442\u0438\u043d\u0433 \u043a\u043e\u0434\u0430: Serializers.py<pre><code> from rest_framework import serializers\nfrom .models import *\n\n\nclass VisiterSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Visiter\n        fields =\"__all__\"\n\n\nclass LivingSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Living\n        fields =\"__all__\"\n\n\nclass RoomSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Room\n        fields =\"__all__\"\n\n\nclass DateSerializer(serializers.Serializer):\n\n    date = serializers.DateField()\n    class Meta:\n        fields = ['date']\n\n\nclass DayOfTheWeekSerializer(serializers.Serializer):\n    day = serializers.CharField()\n    class Meta:\n        fields = ['day']\n\nclass CitySerializer(serializers.ModelSerializer):\n    class Meta:\n        model = City\n        fields =\"__all__\"\n\n\nclass FloorSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Floor\n        fields =\"__all__\"\n\n\nclass WorkerSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Worker\n        fields = \"__all__\"\n\n\nclass CleaningSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Cleaning\n        fields = \"__all__\"\n</code></pre></p>"},{"location":"Lab3/urls/","title":"urls.py","text":"<p>\u0417\u0430\u0434\u0430\u0447\u0430: \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u0441\u044b\u043b\u043a\u0438 \u0434\u043b\u044f \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0441 \u0441\u0430\u0439\u0442\u043e\u043c</p> <p>\u041b\u0438\u0441\u0442\u0438\u043d\u0433 \u043a\u043e\u0434\u0430: urls.py<pre><code>from rest_framework.routers import SimpleRouter\nfrom . import views\n\n\nrouter = SimpleRouter()\n\nrouter.register('workers', views.WorkerViewSet)\nrouter.register('workers/schedule', views.CleaningViewSet)\n\nrouter.register('visiters', views.VisiterViewSet)\nrouter.register(\"visiters/from\", views.CityViewSet)\nrouter.register('visiters/living', views.LivingViewSet)\n\nrouter.register('floor', views.FloorViewSet)\nrouter.register('floor/rooms', views.RoomViewSet)\n\nurlpatterns = router.urls\n</code></pre></p>"},{"location":"Lab3/views/","title":"Views.py","text":"<p>\u041b\u0438\u0441\u0442\u0438\u043d\u0433 \u043a\u043e\u0434\u0430: views.py<pre><code>from rest_framework.viewsets import ModelViewSet\nfrom rest_framework.response import Response\nfrom rest_framework import status\nfrom rest_framework.decorators import action\nfrom rest_framework.permissions import IsAdminUser, IsAuthenticated, SAFE_METHODS\nfrom . import serializers\nfrom .models import *\nimport datetime\n\n\nclass VisiterViewSet(ModelViewSet):\n    queryset = Visiter.objects.all()\n    serializer_class = serializers.VisiterSerializer\n\n    def get_permissions(self):\n        if self.action in SAFE_METHODS:\n            return [IsAuthenticated()]\n        else:\n            return [IsAdminUser()]\n\n\nclass LivingViewSet(ModelViewSet):\n    queryset = Living.objects.all()\n    serializer_class = serializers.LivingSerializer\n\n    def get_permissions(self):\n        if self.action in SAFE_METHODS:\n            return [IsAuthenticated()]\n        else:\n            return [IsAdminUser()]\n\n\n    def get_serializer_class(self):\n        if self.action == \"get_visiters_from\":\n            return serializers.CitySerializer\n        if self.action == \"who_cleans\":\n            return serializers.DayOfTheWeekSerializer\n        else:\n            return serializers.VisiterSerializer\n\n    @action(detail=False, methods=[\"Post\"])\n    def get_visiters_from(self, request):\n        obj = self.get_object()\n        city = request.data.get(\"name\", None)\n        if city:\n            vis = Visiter.objects.filter(fr__name=city)\n            ser = serializers.VisiterSerializer(vis, many=True)\n            return Response(ser.data, status=status.HTTP_200_OK)\n        return Response(status=status.HTTP_400_BAD_REQUEST)\n\n    @action(detail=True, methods=[\"Post\"])\n    def who_cleans(self, request, pk=None):\n        obj = self.get_object()\n        day = request.data.get(\"day\", None)\n        if day:\n            room = Room.objects.filter(living_who__in=Living.objects.filter(visiter=obj.id))\n            cleaning = Cleaning.objects.filter(room=room.id, day_of_week=day)\n            ser = serializers.CleaningSerializer(cleaning)\n            return Response(ser.data, status=status.HTTP_200_OK)\n        return Response(status=status.HTTP_400_BAD_REQUEST)\n\n\nclass RoomViewSet(ModelViewSet):\n    queryset = Room.objects.all()\n\n    def get_permissions(self):\n        if self.action in SAFE_METHODS:\n            return [IsAuthenticated()]\n        else:\n            return [IsAdminUser()]\n\n    def get_serializer_class(self):\n        if self.action == \"get_living_by_date\":\n            return serializers.DateSerializer\n        else:\n            return serializers.RoomSerializer\n\n    @action(detail=True, methods=[\"Post\"])\n    def get_living_by_date(self, request, pk=None):\n        obj = self.get_object()\n        date = request.data.get(\"date\", None)\n\n        if date:\n            livings = Living.objects.filter(room=obj.id, date_start__lt=date, date_end__gt=date)\n            ser = serializers.LivingSerializer(livings, many=True)\n            return Response(ser.data, status=status.HTTP_200_OK)\n\n        return Response(status=status.HTTP_400_BAD_REQUEST)\n\n    @action(detail=False, methods=[\"GET\"])\n    def get_living_by_date(self, request):\n        qs = Room.objects.none()\n\n        for obj in Room.objects.all():\n            if not Living.objects.filter(room=obj.id, date_start__lt=datetime.date.today(), date_end__gt=datetime.date.today()):\n                qs |= Room.objects.filter(id=obj.id)\n\n        ser = serializers.RoomSerializer(qs, many=True)\n        return Response(ser.data, status=status.HTTP_200_OK)\n\n\nclass FloorViewSet(ModelViewSet):\n    queryset = Floor.objects.all()\n    serializer_class = serializers.FloorSerializer\n    permission_classes = [IsAuthenticated]\n\n\nclass CityViewSet(ModelViewSet):\n    queryset = City.objects.all()\n    serializer_class = serializers.CitySerializer\n    permission_classes = [IsAuthenticated]\n\n\nclass WorkerViewSet(ModelViewSet):\n    queryset = Worker.objects.all()\n    serializer_class = serializers.WorkerSerializer\n\n    def get_permissions(self):\n        if self.action in SAFE_METHODS:\n            return [IsAuthenticated()]\n        else:\n            return [IsAdminUser()]\n\n\nclass CleaningViewSet(ModelViewSet):\n    queryset = Cleaning.objects.all()\n    serializer_class = serializers.CleaningSerializer\n\n    def get_permissions(self):\n        if self.action in SAFE_METHODS:\n            return [IsAuthenticated()]\n        else:\n            return [IsAdminUser()]\n</code></pre></p>"},{"location":"Lab4/EditingProgram/","title":"EditingProgram.vue","text":"<p>\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435:\u041f\u0440\u0438\u043c\u0435\u0440 \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u0430, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u044f\u0442\u0441\u044f \u0432\u0441\u0435 CRUD \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438</p> <p>\u041b\u0438\u0441\u0442\u0438\u043d\u0433 \u043a\u043e\u0434\u0430: EditingProgram.vue<pre><code>&lt;script setup lang=\"ts\"&gt;\nimport {onMounted, ref, Ref} from \"vue\";\nimport TimePicker from \"../TimePicker.vue\";\nimport More from \"../../assets/more.svg\"\nimport Actions from \"../Actions.vue\";\nimport router from \"../../router\";\nimport LeftArrow from \"../../assets/left-arrow.svg\";\nimport Edit from \"../../assets/edit.svg\";\nimport Grid from \"../Grid.vue\";\nimport {StainerStore} from \"../../store/StainerStore.ts\";\nimport client from \"../../utils/client.ts\";\nimport {components} from \"../../types/schema\";\nimport {Cell} from \"../../types/types.ts\";\nimport TestKeyboard from \"../Test/TestKeyboard.vue\";\n\ntype Step = components[\"schemas\"][\"ProgramStep\"];\n\nconst stainer = StainerStore();\n\nconst props = defineProps&lt;{\n  id: number\n}&gt;()\n\nonMounted(async () =&gt; {\n  fetchProgram()\n})\n\nasync function fetchProgram() {\n  let {data, error, response} = await client.GET(`/api/programs/programs/{id}/`, {\n    params: {\n      path: {\n        id: props.id\n      }\n    }\n  })\n  if (error) {\n    if (response.status == 401) {\n      router.push('/login')\n    }\n    editProgram.value = program.value\n    return\n  }\n  if (!data) return\n  program.value = data\n  editProgram.value = data\n  if (data.steps.length &lt; 1) {\n    addStep()\n  }\n}\n\nconst showGrid = ref(false);\nlet selectedStep: Step;\nlet copiedStep: components[\"schemas\"][\"ProgramStepRequest\"];\n\nconst program: Ref&lt;components[\"schemas\"][\"ProgramDetail\"] | undefined&gt; = ref(undefined)\nconst editProgram: Ref&lt;components[\"schemas\"][\"ProgramDetail\"] | undefined&gt; = ref()\n\nasync function editReagent(cell: Cell) {\n  let body: components[\"schemas\"][\"PatchedProgramStepRequest\"] = {\n    step_type: 'reagent',\n    cell_x: (cell.id - 1) % 8,\n    cell_y: Math.trunc((cell.id - 1) / 8),\n    reagent: null,\n    seconds: selectedStep.seconds,\n    stirring: selectedStep.stirring,\n    precision: selectedStep.precision,\n    order: selectedStep.order\n  }\n  switch (cell.object) {\n    case 'washer':\n      body.step_type = 'washing'\n      break\n    case 'heater':\n      body.step_type = 'drying'\n      break\n    default:\n      if (cell.data) {\n        body.step_type = 'reagent'\n        body.reagent = cell.data.reagent\n        break\n      } else return\n  }\n  if (typeof cell.data?.cell_x !== 'undefined' &amp;&amp; typeof cell.data?.cell_y !== 'undefined') {\n    body.cell_x = cell.data?.cell_x\n    body.cell_y = cell.data?.cell_y\n  }\n  let {error, response} = await client.PATCH(`/api/programs/steps/{id}/`, {\n    params: {\n      path: {\n        id: selectedStep.id\n      }\n    },\n    body: body\n  })\n  if (error) {\n    if (response.status == 401) {\n      router.push('/login')\n    }\n  }\n  await fetchProgram()\n}\n\nfunction processStep(step: Step) {\n  if (step.step_type === 'drying')\n    return '\u0421\u0443\u0448\u043a\u0430'\n  if (step.step_type === 'washing')\n    return '\u041f\u0440\u043e\u043c\u044b\u0432\u043a\u0430'\n  return getReagent(step.reagent)\n}\n\nfunction processStation(step: Step) {\n  const lttrs = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H']\n  return lttrs[step.cell_x] + (step.cell_y + 1)\n}\n\nasync function deleteStep(step: Step) {\n  let {error, response} = await client.DELETE(`/api/programs/steps/{id}/`, {\n    params: {\n      path: {\n        id: step.id\n      }\n    }\n  })\n  if (error) {\n    if (response.status == 401) {\n      router.push('/login')\n    }\n  }\n  await fetchProgram()\n}\n\nasync function addStep(step?: Step) {\n  if (!stainer.currentConfiguration) return\n  let newStep: components[\"schemas\"][\"ProgramStepRequest\"] = {\n    \"program\": props.id,\n    \"step_type\": \"reagent\",\n    \"cell_x\": stainer.currentConfiguration.stations[0].cell_x,\n    \"cell_y\": stainer.currentConfiguration.stations[0].cell_y,\n    \"reagent\": stainer.currentConfiguration.stations[0].reagent,\n    \"seconds\": 5,\n    \"stirring\": \"off\",\n    \"precision\": \"exact\",\n    \"order\": step ? step.order + 1 : 1\n  }\n  let {error, response} = await client.POST(`/api/programs/steps/`, {\n    body: newStep\n  })\n  if (error) {\n    if (response.status == 401) {\n      router.push('/login')\n    }\n  }\n  await fetchProgram()\n}\n\nasync function pasteStep(step: Step) {\n  if (!copiedStep) return\n  copiedStep.order = step.order + 1;\n  copiedStep.program = props.id\n  let {error, response} = await client.POST(`/api/programs/steps/`, {\n    body: copiedStep\n  })\n  if (error) {\n    if (response.status == 401) {\n      router.push('/login')\n    }\n  }\n  await fetchProgram()\n}\n\nasync function updateStep(step: Step) {\n  let {error, response} = await client.PATCH(`/api/programs/steps/{id}/`, {\n    params: {\n      path: {\n        id: step.id\n      }\n    },\n    body: step\n  })\n  if (error) {\n    if (response.status == 401) {\n      router.push('/login')\n    }\n  }\n  await fetchProgram()\n}\n\nasync function updateName() {\n  if (!editProgram.value?.name) return\n  let {error, response} = await client.PATCH(`/api/programs/programs/{id}/`, {\n    params: {\n      path: {\n        id: props.id\n      }\n    },\n    body: {name: editProgram.value.name}\n  })\n  if (error) {\n    if (response.status == 401) {\n      router.push('/login')\n    }\n  }\n  await fetchProgram()\n  await stainer.fetchCurrentConfiguration()\n}\n\nfunction getTime(sec: number){\n    const hours = ('0' + Math.floor(sec / 3600)).slice(-2)\n    const minutes = ('0' + Math.floor((sec % 3600) / 60)).slice(-2)\n    const seconds = ('0' + sec % 60).slice(-2)\n    return `${hours}:${minutes}:${seconds}`\n}\n\nconst input = ref()\nconst showKeyboard = ref(false)\nconst showTimePicker: Ref&lt;number | undefined&gt; = ref();\nconst showActions = ref()\n\nfunction getReagent(reagentId: number | null | undefined) {\n  if (!reagentId) return\n  let fetchedReagent = stainer.reagents.filter(reagent =&gt; reagent.id === reagentId)[0];\n  if (!fetchedReagent) return\n  if (fetchedReagent.short_name) return fetchedReagent.short_name;\n  else return fetchedReagent.long_name;\n}\n&lt;/script&gt;\n\n&lt;template&gt;\n  &lt;div v-if=\"program &amp;&amp; editProgram\" class=\"w-5/6 h-2/3\"&gt;\n    &lt;div v-if=\"showGrid\" class=\"absolute w-full bg-white border-black border rounded-xl z-50 -mt-2 p-4\"&gt;\n      &lt;Grid @selected-cell=\"cell =&gt; {editReagent(cell); showGrid=false}\"/&gt;\n    &lt;/div&gt;\n    &lt;div class=\"grid mx-12 grid-cols-[1fr_14fr] mb-4 w-full h-12\"&gt;\n      &lt;div&gt;&lt;/div&gt;\n      &lt;div class=\"login-border relative\"&gt;\n        &lt;input @click=\"showKeyboard = true\" type=\"text\" v-model=\"editProgram.name\" class=\"w-full h-full rounded-lg p-2\"\n               placeholder=\"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b \"/&gt;\n        &lt;Edit class=\"absolute right-0 top-0 m-3\"/&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n    &lt;div v-show=\"showKeyboard\" class=\"absolute z-50 w-4/5 left-0 right-0 my-0 mx-auto flex justify-center\"&gt;\n      &lt;TestKeyboard @hide='() =&gt; {showKeyboard= false; updateName()}' @show=\"showKeyboard=true\"/&gt;\n    &lt;/div&gt;\n    &lt;div class=\"grid mx-12 w-full z-0 col-span-7 bg-white auto-rows-[70px] grid-cols-[1fr_1fr_2fr_4fr_2fr_3fr_2fr]\"&gt;\n      &lt;div class=\"\"&gt;&lt;/div&gt;\n      &lt;div class=\"border-grey-3 border-[1px] sticky flex items-center p-2\"&gt;\u0428\u0430\u0433&lt;/div&gt;\n      &lt;div class=\"border-grey-3 border-[1px] sticky flex items-center p-2\"&gt;\u2116 \u0441\u0442\u0430\u043d\u0446\u0438\u0438&lt;/div&gt;\n      &lt;div class=\"border-grey-3 border-[1px] sticky flex items-center p-2\"&gt;\u0420\u0435\u0430\u0433\u0435\u043d\u0442&lt;/div&gt;\n      &lt;div class=\"border-grey-3 border-[1px] sticky flex items-center p-2\"&gt;\u0412\u0440\u0435\u043c\u044f&lt;/div&gt;\n      &lt;div class=\"border-grey-3 border-[1px] sticky flex items-center p-2\"&gt;\u041f\u0435\u0440\u0435\u043c\u0435\u0448\u0438\u0432\u0430\u043d\u0438\u0435&lt;/div&gt;\n      &lt;div class=\"border-grey-3 border-[1px] sticky flex items-center p-2\"&gt;\u0417\u0430\u0434\u0435\u0440\u0436\u043a\u0430&lt;/div&gt;\n    &lt;/div&gt;\n    &lt;div\n        class=\"w-full mx-12 h-3/4 max-h-[15rem] hide-scrollbar overflow-y-auto inline-grid auto-rows-[70px] grid-cols-[1fr_1fr_2fr_4fr_2fr_3fr_2fr]\"&gt;\n      &lt;template v-for=\"(step) in program.steps\"&gt;\n        &lt;div class=\"flex justify-center items-center\"&gt;\n          &lt;div&gt;\n            &lt;More @click=\"showActions=step.id\" class=\"overflow-visible\"/&gt;\n            &lt;Actions v-if=\"showActions === step.id\" @delete=\"deleteStep(step)\" @add=\"addStep(step)\"\n                     @copy=\"copiedStep = Object.assign({program: props.id}, step)\" @paste=\"pasteStep(step)\" @hide=\"showActions=''\"\n                     class=\"z-50 absolute bottom-36 left-14\"/&gt;\n            &lt;div @click.exact=\"showActions=''\" v-if=\"showActions === step.id\"\n                 class=\"absolute z-10 modal w-full h-full top-0 left-0\"&gt;\n            &lt;/div&gt;\n          &lt;/div&gt;\n        &lt;/div&gt;\n        &lt;div class=\"border-grey-3 border-[1px] flex items-center p-2\"&gt;\n          {{ step.order }}\n        &lt;/div&gt;\n        &lt;div class=\"border-grey-3 border-[1px] flex items-center p-2\"&gt;{{ processStation(step) }}&lt;/div&gt;\n        &lt;div @click=\"showGrid = true; selectedStep = step\" class=\" border-grey-3 border-[1px] flex items-center p-2\"&gt;\n          {{ processStep(step) }}\n        &lt;/div&gt;\n        &lt;div @click=\"showTimePicker = step.id\"\n             class=\"overflow-visible border-grey-3 border-[1px] w-full flex items-center p-2\"&gt;\n          &lt;span&gt;{{ getTime(step.seconds) }}&lt;/span&gt;\n        &lt;/div&gt;\n        &lt;div v-if=\"showTimePicker === step.id\" @click.exact=\"showTimePicker= undefined\"\n             class=\"absolute top-0 left-0 w-screen h-screen flex justify-center items-center\"&gt;\n          &lt;TimePicker @click.stop @time=\"time =&gt; {step.seconds = time; updateStep(step)}\"\n                      :given-time=\"step.seconds\" v-model:show=\"showTimePicker\"/&gt;\n        &lt;/div&gt;\n        &lt;div class=\"border-grey-3 border-[1px] flex items-center p-2\"&gt;\n          &lt;select @change=\"updateStep(step)\" v-model=\"step.stirring\" class=\"bg-white\"&gt;\n            &lt;option value=\"off\" :selected=\"'off' === step.stirring\"&gt;\u0412\u042b\u041a\u041b&lt;/option&gt;\n            &lt;option value=\"fast\" :selected=\"'fast' === step.stirring\"&gt;\u0411\u044b\u0441\u0442\u0440\u043e&lt;/option&gt;\n            &lt;option value=\"slow\" :selected=\"'slow' === step.stirring\"&gt;\u041c\u0435\u0434\u043b\u0435\u043d\u043d\u043e&lt;/option&gt;\n          &lt;/select&gt;\n        &lt;/div&gt;\n        &lt;div class=\"border-grey-3 border-[1px] flex items-center p-2\"&gt;\n          &lt;select @change=\"updateStep(step)\" v-model=\"step.precision\" class=\"bg-white\"&gt;\n            &lt;option value=\"exact\" :selected=\"'exact' === step.precision\"&gt;\u0442\u043e\u0447\u043d\u043e&lt;/option&gt;\n            &lt;option value=\"percent_20\" :selected=\"'percent_20' === step.precision\"&gt;+20%&lt;/option&gt;\n            &lt;option value=\"percent_50\" :selected=\"'percent_50' === step.precision\"&gt;+50%&lt;/option&gt;\n            &lt;option value=\"unlimited\" :selected=\"'unlimited' === step.precision\"&gt;\u043d\u0435\u043e\u0433\u0440.&lt;/option&gt;\n          &lt;/select&gt;\n        &lt;/div&gt;\n      &lt;/template&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n  &lt;div class=\"absolute bottom-0 mb-8 flex justify-between w-full px-12\"&gt;\n    &lt;button @click=\"showGrid ? showGrid=false : router.go(-1)\"\n            class=\"main-button flex items-center justify-center gap-2 w-1/6\"&gt;\n      &lt;LeftArrow/&gt;\n      \u041d\u0430\u0437\u0430\u0434\n    &lt;/button&gt;\n    &lt;button @click=\"router.push('/edit-program')\" class=\"main-button w-1/4\"&gt;\u0421\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u044c&lt;/button&gt;\n  &lt;/div&gt;\n  &lt;div class=\"footer\"&gt;&lt;/div&gt;\n&lt;/template&gt;\n\n&lt;style&gt;\n.bg-black {\n  background-color: black;\n}\n\n.hide-scrollbar::-webkit-scrollbar {\n  display: none;\n}\n.hide-scrollbar {\n  scrollbar-width: none;  /* Firefox */\n  -ms-overflow-style: none;  /* IE and Edge */\n}\n&lt;/style&gt;\n</code></pre></p>"},{"location":"Lab4/app/","title":"main.ts","text":"<p>\u041b\u0438\u0441\u0442\u0438\u043d\u0433 \u043a\u043e\u0434\u0430: main.ts<pre><code>// @ts-nocheck\nimport { createApp } from 'vue'\nimport \"./index.css\"\nimport App from './App.vue'\nimport router from \"./router\";\nimport {createPinia} from \"pinia\";\nimport piniaPluginPersistedState, {createPersistedState} from \"pinia-plugin-persistedstate\"\nimport '@mdi/font/css/materialdesignicons.css'\nimport VueAwesomePaginate from \"vue-awesome-paginate\";\n\n// import the necessary css file\nimport \"vue-awesome-paginate/dist/style.css\";\n\nconst pinia = createPinia();\npinia.use(piniaPluginPersistedState)\n\ncreateApp(App).use(VueAwesomePaginate).use(pinia).use(router).mount('#app')\n</code></pre></p>"},{"location":"Lab4/preview/","title":"\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435","text":"<p>\u0417\u0430\u0434\u0430\u0447\u0430: \u0421\u0434\u0430\u0447\u0430 \u0440\u0430\u0431\u043e\u0442\u044b \u043b\u0438\u0447\u043d\u044b\u043c \u043f\u0440\u043e\u0435\u043a\u0442\u043e\u043c \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u043d\u044b\u043c \u043d\u0430 Vue.js</p> <p>\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043f\u0440\u043e\u0435\u043a\u0442\u0430: \u0412\u0435\u0431 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u0434\u043b\u044f \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043c\u0435\u0445\u0430\u043d\u0438\u0447\u0435\u0441\u043a\u0438\u043c \u043c\u0430\u043d\u0438\u043f\u0443\u043b\u044f\u0442\u043e\u0440\u043e\u043c, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043e\u043a\u0440\u0430\u0448\u0438\u0432\u0430\u0435\u0442 \u0445\u0438\u043c\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0440\u0435\u0430\u0433\u0435\u043d\u0442\u044b. \u041d\u0430\u043f\u0438\u0441\u0430\u043d \u043d\u0430 Vye.js + Typescript, CSS \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e TailwindCss</p>"},{"location":"Lab4/router/","title":"router.ts","text":"<p>\u041b\u0438\u0441\u0442\u0438\u043d\u0433 \u043a\u043e\u0434\u0430: router.ts<pre><code>import {createRouter, createWebHistory} from 'vue-router'\n\nconst Main = () =&gt; import(\"../components/MainPage/Main.vue\")\nconst StartProgram = () =&gt; import(\"../components/StartProgramPage/StartProgram.vue\")\nconst EditProgram = () =&gt;  import(\"../components/EditProgram/EditProgram.vue\")\nconst EditingProgram = () =&gt;  import(\"../components/EditProgram/EditingProgram.vue\")\nconst EditConfiguration = () =&gt;  import(\"../components/EditConfiguration/EditConfiguration.vue\")\nconst EditingConfiguration = () =&gt;  import(\"../components/EditConfiguration/EditingConfiguration.vue\")\nconst EditReagent = () =&gt;  import(\"../components/EditReagent/EditReagent.vue\")\nconst Settings = () =&gt;  import(\"../components/Settings.vue\")\nconst Test = () =&gt; import(\"../components/Test/TestPage.vue\")\nconst Statistics = () =&gt; import(\"../components/Statistic/Statistics.vue\");\nconst UsageStatistics = () =&gt; import(\"../components/Statistic/UsageStatistics.vue\")\nconst EventStatistics = () =&gt; import(\"../components/Statistic/EventStatistics.vue\")\nconst EditUser = () =&gt;  import(\"../components/EditUser/EditUser.vue\")\nconst EditingUser = () =&gt; import(\"../components/EditUser/EditingUser.vue\")\nconst NewUser = () =&gt;  import(\"../components/EditUser/NewUser.vue\")\nconst Pause = () =&gt;  import(\"../components/PausePage/Pause.vue\")\nconst TakeCart = () =&gt;  import(\"../components/TakeCart.vue\")\n\nconst Stages = () =&gt;  import(\"../components/Stages.vue\")\nimport {UserStore} from \"../store/UserStore\"\nimport LogIn from \"../components/LoginPage/LogIn.vue\";\nimport {AppStore} from \"../store/AppStore.ts\";\n\nconst routes = [\n    {\n        path: '/login',\n        name: 'login',\n        component: LogIn,\n        alias: ['/']\n    },\n    {path: '/process', name: 'process', component: Main},\n    {path: '/start-program', name: 'start Program', component: StartProgram},\n    {path: '/edit-program', name:'editProgram', component: EditProgram},\n    {path: '/editing-program/:id', name:'editingProgram', component: EditingProgram, props: true},\n    {path: '/edit-configuration', name:'editConfiguration', component: EditConfiguration},\n    {path: '/editing-configuration/:id', name:'newConfiguration', component: EditingConfiguration, props: true},\n    {path: '/edit-reagent', name:'editReagent', component: EditReagent},\n    {path: '/settings', name:'settings', component: Settings},\n    {path: '/test', name:'test', component: Test},\n    {path: '/statistics', name:'statistics', component: Statistics},\n    {path: '/usage-statistics', name:'usageStatistics', component: UsageStatistics},\n    {path: '/event-statistics', name:'eventStatistics', component: EventStatistics},\n    {path: '/edit-user', name:'editUser', component: EditUser},\n    {path: '/editing-user', name:'editingUser', component: EditingUser},\n    {path: '/new-user', name:'newUser', component: NewUser},\n    {path: '/pause', name:'newUser', component: Pause},\n    {path: '/take-cart', name:'takeCart', component: TakeCart},\n    {path: '/stages', name:'stages', component: Stages}\n\n]\n\nconst router = createRouter({\n    history: createWebHistory(),\n    routes\n})\nrouter.beforeEach((to) =&gt; {\n    // redirect to login page if not logged in and trying to access a restricted page\n    const user = UserStore();\n    const program = AppStore();\n    program.loading = true;\n    const publicPages = ['/login'];\n    const authRequired = !publicPages.includes(to.path);\n    const loggedIn = user.getToken();\n    if (authRequired &amp;&amp; !loggedIn) {\n        return {name: 'login'}\n    }\n\n    if (user.getUser() !== 'SERVICE' &amp;&amp; to.path === '/test') {\n        return {name: 'test'}\n    }\n    return\n})\n\nrouter.afterEach(() =&gt; {\n    const program = AppStore();\n    program.loading = false;\n})\n\nexport default router\n</code></pre></p>"},{"location":"Practise3/report/","title":"\u041f\u0440\u0430\u043a\u0442\u0438\u043a\u0430 3.1","text":"<p>\u041c\u043e\u0434\u0435\u043b\u0438</p> <p><pre><code>from django.db import models\n\n\nclass Owner(models.Model):\n    name = models.CharField(max_length=100)\n    surname = models.CharField(max_length=100)\n    birthday = models.DateField()\n\n\nclass License(models.Model):\n    name = models.CharField(max_length=100)\n    owner = models.ForeignKey(Owner, related_name='licences', on_delete=models.CASCADE)\n    license_type = models.CharField(max_length=100)\n    date_given = models.DateField()\n\n\nclass Car(models.Model):\n    num = models.CharField(max_length=100)\n    mark = models.CharField(max_length=100)\n    model = models.CharField(max_length=100)\n    color = models.CharField(max_length=100)\n\n\nclass CarOwning(models.Model):\n    start = models.DateField()\n    finish = models.DateField()\n\n    car = models.ForeignKey(Car, related_name='owners', on_delete=models.CASCADE)\n    owner = models.ForeignKey(Owner, related_name='cars', on_delete=models.CASCADE)\n</code></pre> \u0418\u043c\u043f\u043e\u0440\u0442\u044b <pre><code>&gt;&gt;&gt; from practice.models import *\n&gt;&gt;&gt; import datetime\n&gt;&gt;&gt; from django.db.models import Min, Max, Count\n</code></pre></p> <p>\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 <pre><code>&gt;&gt;&gt; car1 = Car.objects.create(num='num1', mark='mark1', model='model1', color='black')\n&gt;&gt;&gt; car2 = Car.objects.create(num='num2', mark='mark1', model='model2', color='black')\n&gt;&gt;&gt; car3 = Car.objects.create(num='num3', mark='mark1', model='model3', color='black')\n&gt;&gt;&gt; car4 = Car.objects.create(num='num4', mark='mark2', model='model1', color='black')\n&gt;&gt;&gt; car5 = Car.objects.create(num='num5', mark='mark2', model='model2', color='black')\n&gt;&gt;&gt; car6 = Car.objects.create(num='num6', mark='mark2', model='model3', color='black')\n\n\n&gt;&gt;&gt; owner1 = Owner.objects.create(name='name1', surname='surname1', birthday=datetime.date.today())\n&gt;&gt;&gt; owner2 = Owner.objects.create(name='name2', surname='surname2', birthday=datetime.date.today())\n&gt;&gt;&gt; owner3 = Owner.objects.create(name='name3', surname='surname3', birthday=datetime.date.today())\n&gt;&gt;&gt; owner4 = Owner.objects.create(name='name4', surname='surname4', birthday=datetime.date.today())\n&gt;&gt;&gt; owner5 = Owner.objects.create(name='name5', surname='surname5', birthday=datetime.date.today())\n&gt;&gt;&gt; owner6 = Owner.objects.create(name='name6', surname='surname6', birthday=datetime.date.today())\n\n&gt;&gt;&gt;license1 = License.objects.create(name='licence1', owner=owner1, license_type='type1', date_given=datetime.date.today())\n&gt;&gt;&gt;license2 = License.objects.create(name='licence2', owner=owner2, license_type='type1', date_given=datetime.date.today())\n&gt;&gt;&gt;license3 = License.objects.create(name='licence3', owner=owner3, license_type='type1', date_given=datetime.date.today())\n&gt;&gt;&gt;license4 = License.objects.create(name='licence4', owner=owner4, license_type='type2', date_given=datetime.date.today())\n&gt;&gt;&gt;license5 = License.objects.create(name='licence5', owner=owner5, license_type='type2', date_given=datetime.date.today())\n\n&gt;&gt;&gt;car_owing1 = CarOwning.objects.create(start=datetime.date.today(), finish=datetime.date.today(),\n                                      car=car1, owner=owner1)\n&gt;&gt;&gt;car_owing2 = CarOwning.objects.create(start=datetime.date.today(), finish=datetime.date.today(),\n                                      car=car2, owner=owner2)\n&gt;&gt;&gt;car_owing3 = CarOwning.objects.create(start=datetime.date.today(), finish=datetime.date.today(),\n                                      car=car3, owner=owner3)\n&gt;&gt;&gt;car_owing4 = CarOwning.objects.create(start=datetime.date.today(), finish=datetime.date.today(),\n                                      car=car4, owner=owner4)\n&gt;&gt;&gt;car_owing5 = CarOwning.objects.create(start=datetime.date.today(), finish=datetime.date.today(),\n                                      car=car5, owner=owner5)\n&gt;&gt;&gt;car_owing6 = CarOwning.objects.create(start=datetime.date.today(), finish=datetime.date.today(),\n                                      car=car6, owner=owner6)\n</code></pre></p> <p>\u0412\u044b\u0432\u0435\u0434\u0435\u0442\u0435 \u0432\u0441\u0435 \u043c\u0430\u0448\u0438\u043d\u044b \u043c\u0430\u0440\u043a\u0438 \u201cToyota\u201d (\u0438\u043b\u0438 \u043b\u044e\u0431\u043e\u0439 \u0434\u0440\u0443\u0433\u043e\u0439 \u043c\u0430\u0440\u043a\u0438, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0443 \u0432\u0430\u0441 \u0435\u0441\u0442\u044c)</p> <pre><code>&gt;&gt;&gt; Car.objects.filter(mark='mark1')\n&lt;QuerySet [&lt;Car: Car object (1)&gt;, &lt;Car: Car object (2)&gt;, &lt;Car: Car object (3)&gt;, &lt;Car: Car object (7)&gt;, &lt;Car: Car object (8)&gt;, &lt;Car: Car object (9)&gt;]&gt;\n</code></pre> <p>\u041d\u0430\u0439\u0442\u0438 \u0432\u0441\u0435\u0445 \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u0435\u0439 \u0441 \u0438\u043c\u0435\u043d\u0435\u043c \u201c\u041e\u043b\u0435\u0433\u201d (\u0438\u043b\u0438 \u043b\u044e\u0431\u044b\u043c \u0434\u0440\u0443\u0433\u0438\u043c \u0438\u043c\u0435\u043d\u0435\u043c \u043d\u0430 \u0432\u0430\u0448\u0435 \u0443\u0441\u043c\u043e\u0442\u0440\u0435\u043d\u0438\u0435)</p> <p><pre><code>&gt;&gt;&gt; Owner.objects.filter(name='name1')\n&lt;QuerySet [&lt;Owner: Owner object (1)&gt;, &lt;Owner: Owner object (7)&gt;]&gt;\n</code></pre> \u0412\u0437\u044f\u0432 \u043b\u044e\u0431\u043e\u0433\u043e \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u043e\u0433\u043e \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0430 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0435\u0433\u043e id, \u0438 \u043f\u043e \u044d\u0442\u043e\u043c\u0443 id \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u044f \u0432 \u0432\u0438\u0434\u0435 \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u043c\u043e\u0434\u0435\u043b\u0438 (\u043c\u043e\u0436\u043d\u043e \u0432 2 \u0437\u0430\u043f\u0440\u043e\u0441\u0430)</p> <pre><code>&gt;&gt;&gt; License.objects.filter(owner_id=7)\n&lt;QuerySet [&lt;License: License object (1)&gt;]&gt;\n</code></pre> <p>\u0412\u044b\u0432\u0435\u0441\u0442\u0438 \u0432\u0441\u0435\u0445 \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432 \u043a\u0440\u0430\u0441\u043d\u044b\u0445 \u043c\u0430\u0448\u0438\u043d (\u0438\u043b\u0438 \u043b\u044e\u0431\u043e\u0433\u043e \u0434\u0440\u0443\u0433\u043e\u0433\u043e \u0446\u0432\u0435\u0442\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0443 \u0432\u0430\u0441 \u043f\u0440\u0438\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442)</p> <pre><code>&gt;&gt;&gt; Car.objects.filter(color='black')\n&lt;QuerySet [&lt;Car: Car object (1)&gt;, &lt;Car: Car object (2)&gt;, &lt;Car: Car object (3)&gt;, &lt;Car: Car object (4)&gt;, &lt;Car: Car object (5)&gt;, &lt;Car: Car object (6)&gt;]&gt;\n</code></pre> <p>\u041d\u0430\u0439\u0442\u0438 \u0432\u0441\u0435\u0445 \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432, \u0447\u0435\u0439 \u0433\u043e\u0434 \u0432\u043b\u0430\u0434\u0435\u043d\u0438\u044f \u043c\u0430\u0448\u0438\u043d\u043e\u0439 \u043d\u0430\u0447\u0438\u043d\u0430\u0435\u0442\u0441\u044f \u0441 2010 (\u0438\u043b\u0438 \u043b\u044e\u0431\u043e\u0439 \u0434\u0440\u0443\u0433\u043e\u0439 \u0433\u043e\u0434, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u0440\u0438\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u0443 \u0432\u0430\u0441 \u0432 \u0431\u0430\u0437\u0435)</p> <p><pre><code>&gt;&gt;&gt; Owner.objects.filter(cars__start__gt=datetime.date(year=2010, month=1, day=1),\n...                           cars__start__lt=datetime.date(year=2011, month=1, day=1))\n&lt;QuerySet []&gt;\n&gt;&gt;&gt; Owner.objects.filter(cars__start__gt=datetime.date(year=2024, month=1, day=1), cars__start__lt=datetime.date(year=2025, month=1, day=1))\n&lt;QuerySet [&lt;Owner: Owner object (7)&gt;, &lt;Owner: Owner object (8)&gt;, &lt;Owner: Owner object (9)&gt;, &lt;Owner: Owner object (10)&gt;, &lt;Owner: Owner object (11)&gt;, &lt;Owner: Owner object (12)&gt;]&gt;\n</code></pre> \u0412\u044b\u0432\u043e\u0434 \u0434\u0430\u0442\u044b \u0432\u044b\u0434\u0430\u0447\u0438 \u0441\u0430\u043c\u043e\u0433\u043e \u0441\u0442\u0430\u0440\u0448\u0435\u0433\u043e \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0433\u043e \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u044f</p> <pre><code>&gt;&gt;&gt; License.objects.aggregate(date_given=Min('date_given'))\n{'date_given': datetime.date(2024, 1, 10)}\n</code></pre> <p>\u0423\u043a\u0430\u0436\u0438\u0442\u0435 \u0441\u0430\u043c\u0443\u044e \u043f\u043e\u0437\u0434\u043d\u044e\u044e \u0434\u0430\u0442\u0443 \u0432\u043b\u0430\u0434\u0435\u043d\u0438\u044f \u043c\u0430\u0448\u0438\u043d\u043e\u0439, \u0438\u043c\u0435\u044e\u0449\u0443\u044e \u043a\u0430\u043a\u0443\u044e-\u0442\u043e \u0438\u0437 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0445 \u043c\u043e\u0434\u0435\u043b\u0435\u0439 \u0432 \u0432\u0430\u0448\u0435\u0439 \u0431\u0430\u0437\u0435</p> <p><pre><code>&gt;&gt;&gt; CarOwning.objects.aggregate(date_given=Max('finish'))\n{'date_given': datetime.date(2024, 1, 10)}\n</code></pre> \u0412\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043c\u0430\u0448\u0438\u043d \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044f</p> <pre><code>&gt;&gt;&gt; counts = Owner.objects.annotate(Count(\"cars\"))\n&gt;&gt;&gt; for count in counts:\n...     print(count.name, count.cars__count)\n... \nname1 1\nname2 1\nname3 1\nname4 1\nname5 1\nname6 1\n</code></pre> <p>\u041f\u043e\u0434\u0441\u0447\u0438\u0442\u0430\u0439\u0442\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043c\u0430\u0448\u0438\u043d \u043a\u0430\u0436\u0434\u043e\u0439 \u043c\u0430\u0440\u043a\u0438</p> <pre><code>&gt;&gt;&gt; Car.objects.values(\"mark\").annotate(Count(\"id\"))\n&lt;QuerySet [{'mark': 'mark1', 'id__count': 6}, {'mark': 'mark2', 'id__count': 6}]&gt;\n</code></pre> <p>\u041e\u0442\u0441\u043e\u0440\u0442\u0438\u0440\u0443\u0439\u0442\u0435 \u0432\u0441\u0435\u0445 \u0430\u0432\u0442\u043e\u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432 \u043f\u043e \u0434\u0430\u0442\u0435 \u0432\u044b\u0434\u0430\u0447\u0438 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u044f</p> <pre><code>&gt;&gt;&gt; CarOwning.objects.order_by(\"owner__licences__date_given\")\n&lt;QuerySet [&lt;CarOwning: CarOwning object (1)&gt;, &lt;CarOwning: CarOwning object (2)&gt;, &lt;CarOwning: CarOwning object (3)&gt;, &lt;CarOwning: CarOwning object (4)&gt;, &lt;CarOwning: CarOwning object (5)&gt;, &lt;CarOwning: CarOwning object (6)&gt;, &lt;CarOwning: CarOwning object (12)&gt;, &lt;CarOwning: CarOwning object (7)&gt;, &lt;CarOwning: CarOwning object (8)&gt;, &lt;CarOwning: CarOwning object (9)&gt;, &lt;CarOwning: CarOwning object (10)&gt;, &lt;CarOwning: CarOwning object (11)&gt;]&gt;\n</code></pre>"}]}